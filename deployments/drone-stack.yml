version: '3.6'

volumes:
  drone-server-data:

networks:
  traefik:
    external: true
  drone:
    driver: overlay

services:
  drone-server:
    image: drone/drone:alpine
    networks:
      - drone
      - traefik
    volumes:
      - drone-server-data:/var/lib/drone/
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
          - node.hostname == qa-aminion-swarm-master-3
      labels:
        - traefik.port=8000
        - traefik.docker.network=traefik
        - traefik.enable=true
        - traefik.frontend.rule=Host:drone-beta.amiapp.co
        - traefik.backend=drone
    environment:
      - DRONE_OPEN=true
      - DRONE_HOST=${DRONE_HOST}
      - DRONE_GITHUB=true
      - DRONE_GITHUB_CLIENT=${DRONE_GITHUB_CLIENT}
      - DRONE_GITHUB_SECRET=${DRONE_GITHUB_SECRET}
      - DRONE_SECRET=${DRONE_SECRET}

  drone-agent:
    image: drone/agent:alpine
    command: agent
    networks:
      - drone
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_SERVER=drone-server:9000
      - DRONE_SECRET=${DRONE_SECRET}
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
          - node.hostname == qa-aminion-swarm-master-3
